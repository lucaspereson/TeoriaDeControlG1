#include <AccelStepper.h>
#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>
#include <ArduinoJson.h>

#define IN1 0
#define IN2 1
#define IN3 2
#define IN4 3
#define R 4
#define G 5
#define B 6
#define sensor_inc 7
#define eje_x A0

int valor_inc = 0;
String valor_inc_pasaje = "";
int valor_x = 0;
String valor_x_pasaje = "";
AccelStepper motor(AccelStepper::HALF4WIRE, IN1, IN3, IN2, IN4);
const int stepsPerRevolution = 2048;
int velocidad_actual = 500;
String velocidad_pasaje = "";
int velocidad_apagado = 0;
String texto = "VEL";

const char *ssid = "red";
const char password = "***";

ESP8266WebServer server(81);

void setup() {
  pinMode(R, OUTPUT);
  pinMode(G, OUTPUT);
  pinMode(B, OUTPUT);
  pinMode(eje_x, INPUT);
  pinMode(sensor_inc, INPUT);
  Serial.begin(115200);
  motor.setMaxSpeed(velocidad_actual);
  motor.setAcceleration(200);
  motor.move(stepsPerRevolution);

  // Conéctate a la red Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(250);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("");
  Serial.println("**");
  Serial.print("Conectado a la red WiFi: ");
  Serial.println(WiFi.SSID());
  Serial.print("IP: ");
  Serial.println(WiFi.localIP());
  Serial.print("macAdress: ");
  Serial.println(WiFi.macAddress());
  Serial.println("***");

  // Configura las rutas de manejo de las solicitudes HTTP
  server.on("/", HTTP_GET, handleRoot);

  // Inicia el servidor HTTP
  server.begin();
}

void loop() {
  server.handleClient(); // Maneja las solicitudes HTTP
  
  //sensor de inclinacion
  valor_inc = digitalRead(sensor_inc);

  // sensor basculante biaxial
  valor_x = analogRead(eje_x);

  //motor
  if (valor_inc > 0){
    motor.run();
    motor.move(stepsPerRevolution);
    if (valor_x > 1000){
      if (velocidad_actual < 1000) {
        velocidad_actual = velocidad_actual + 100 ;
        motor.setMaxSpeed(velocidad_actual);
        Serial.println();
        digitalWrite(R, 0);
        digitalWrite(G, 2);
        digitalWrite(B, 0);
        delay(300);
        digitalWrite(R, 0);
        digitalWrite(G, 0);
        digitalWrite(B, 0);
      };
      if (velocidad_actual == 1000) {
        Serial.println();
        digitalWrite(R, 2);
        digitalWrite(G, 2);
        digitalWrite(B, 2);
        };
    }
    else{
      if (valor_x < 100){
        if (velocidad_actual > 0) {  
          velocidad_actual = velocidad_actual - 100;
          motor.setMaxSpeed(velocidad_actual);
          Serial.println();
          digitalWrite(R, 0);
          digitalWrite(G, 0);
          digitalWrite(B, 2);
          delay(300);
          digitalWrite(R, 0);
          digitalWrite(G, 0);
          digitalWrite(B, 0);
        };
        if (velocidad_actual == 0){
          Serial.println();
          digitalWrite(R, 2);
          digitalWrite(G, 0);
          digitalWrite(B, 0);
        };
      }
    }
  }
}

String valor_inc_pasaje = "90°";       
String motor_pasaje = "APAGADO"; 
String valor_x_pasaje = "ARRIBA";      

void handleRoot() {
  //Lectura de sensor de inclinacion
  valor_inc = digitalRead(sensor_inc);
  valor_inc = valor_inc * 180 + 90;

  //Lectura de sensor basculante biaxial
  valor_x = analogRead(eje_x);

  //Conversion para pasar el cliente http
  calculoPasaje();

  //Armado de documento json
  StaticJsonDocument<200> jsonDoc;
  jsonDoc["inclinacion"] = valor_inc_pasaje;
  jsonDoc["motor"] = motor_pasaje;
  jsonDoc["potenciometro"] = valor_x_pasaje;

  String response;
  serializeJson(jsonDoc, response);
  server.send(200, "application/json", response);
}

void calculoPasaje() {
  //Pasaje del potenciometro
  if (valor_x > 1000) {
    valor_x_pasaje = "ARRIBA";
  } else {
    if (valor_x < 100) {
      valor_x_pasaje = "ABAJO";
    } else {
      valor_x_pasaje = "NEUTRO";
    }
  }   
  
  //Pasaje del sensor de inclinación
  valor_inc_pasaje = "";
  valor_inc_pasaje.concat(String(valor_inc));
  valor_inc_pasaje.concat("°");

  //Pasaje de velocidad del motor
  if (valor_inc == 90) {
    motor_pasaje = "ENCENDIDO";
  } else {
    motor_pasaje = "APAGADO";
  };
}
